#!/bin/bash
eval "$(cat "$(dirname -- "$0")/.banksh/lib/base")"
# shellcheck source=.banksh/lib/base
source /dev/null

# Simple snapshot testing for Bash scripts, using Git.

declare update_snapshot=
for arg in "$@"; do
  if [[ $arg == -u || $arg == --update-snapshot ]]; then
    update_snapshot=true
  fi
done

cd "$__owd__"

declare status
declare stdout
declare actual
declare expected
declare -i passes=0
declare -i failures=0
for suite in "$PWD"/**/__tests__; do
  cd "$suite"
  rm -rf __snapshots_actual__
  mkdir -p __snapshots_actual__ __snapshots__

  for test in *.spec.bash; do
    echo "$(tput smul || :)$suite/$test$(tput rmul || :)"
    actual="__snapshots_actual__/${test%.spec.bash}.txt"
    expected="__snapshots__/${test%.spec.bash}.txt"
    
    if [[ ! -f "$expected" ]]; then
      printf "stderr:\n\nstdout:\n\nstatus: 0\n" > "$expected"
    fi
    touch "$actual"
    
    status=0
    printf "stderr:\n" >> "$actual"
    stdout="$(bash "$test" 2>>"$actual" | printf "%s\n" "$(cat -)")" || status="$?"
    printf "\nstdout:\n%s\nstatus: %s\n" "$stdout" "$status" >> "$actual"

    if diff --old-group-format="$(tput setaf 12 || :)%<$(tput sgr0 || :)" --new-group-format="$(tput setaf 9 || :)%>$(tput sgr0 || :)" --unchanged-group-format="$(tput setaf 8 || :)%=$(tput sgr0 || :)" --color=auto "$expected" "$actual"; then
      passes+=1
    else
      failures+=1
      if [[ $update_snapshot ]]; then
        cp "$actual" "$expected";
      fi
    fi
    echo
  done
done

declare -i total=$((passes + failures))
if [[ $failures = 0 ]]; then
  echo "$(tput setaf 2 || :)SUCCESS:$(tput sgr0) All $passes tests passed."
  exit 0
else
  if [[ $update_snapshot ]]; then
    echo "$(tput setaf 3 || :)SUCCESS:$(tput sgr0) $failures of $total test snapshots updated."
    exit 0
  else
    echo "$(tput setaf 9 || :)FAILURE:$(tput sgr0) $failures of $total tests failed to match snapshots (colors: $(tput setaf 8 || :)unchanged $(tput setaf 12 || :)expected $(tput setaf 9)actual$(tput sgr0))."
    echo
    echo "Run ./test --update-snapshot to update snapshots."
    exit 1
  fi
fi
