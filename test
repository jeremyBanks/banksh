#!/bin/bash
eval "$(cat "$(dirname -- "$0")/lib/base.bash")"
# shellcheck source=lib/base.bash
source /dev/null

# Simple snapshot testing for Bash scripts, using Git.

declare owd="$PWD"
declare name
declare status
declare stdout
declare -i passes=0
declare -i failures=0
for suite in "$PWD"/**/__tests__; do
  echo "$suite/"
  cd "$suite"
  mkdir -p "__snapshots__"
  for test in *.spec.bash; do
    echo "$test"
    name="__snapshots__/${test%.spec.bash}.txt"
    rm -rf "$name"
    touch "$name"
    status=0
    printf "stderr\n------\n" >> "$name"
    stdout="$(bash "$test" 2>>"$name" | printf "%s\n" "$(cat -)")" || status="$?"
    printf "\nstdout\n------\n%s\n\nstatus\n------\n%s\n" "$stdout" "$status" >> "$name"
    git add --intent-to-add "$suite"
    if git --no-pager diff --exit-code --shortstat -- "__snapshots__/$name.*"; then
      passes+=1
    else
      failures+=1
    fi
  done
  echo
done
cd "$owd"
declare -i total=$((passes + failures))
if git diff --quiet -- "$PWD"/**/__tests__/__snapshots__; then
  echo "$(tput setaf 2 || :)All $passes tests passed.$(tput sgr0 || :)"
  exit 0
else
  echo "$(tput setaf 9 || :)$(tput smul || :)$failures of $total tests failed$(tput rmul || :) (snapshots did not match committed data)$(tput sgr0 || :)"
  git diff --exit-code --compact-summary HEAD -- "$PWD"/**/__tests__/__snapshots__
  exit 1
fi
