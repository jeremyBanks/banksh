#!/bin/bash
# shellcheck source=./libs/base.bash
source /dev/null; eval "$(cat "$(dirname -- "$0")/libs/base.bash")"

# Simple snapshot testing for Bash scripts, using Git.

declare owd="$PWD"
declare name
declare status
declare -i passes=0
declare -i failures=0
for suite in "$PWD"/**/__tests__; do
  echo "$suite/" >&2
  cd "$suite"
  mkdir -p "__snapshots__"
  for test in *.spec.bash; do
    echo "$test" >&2
    name="$(basename "${test%.spec.bash}")"
    rm -rf "__snapshots__/$name.status.txt"
    rm -rf "__snapshots__/$name.stdout.txt"
    rm -rf "__snapshots__/$name.stderr.txt"
    if [[ ! -e "__snapshots__/$name.stdin.txt" ]]; then
      touch "__snapshots__/$name.stdin.txt"
    fi
    status=0
    bash "$test" <"__snapshots__/$name.stdin.txt" 1>"__snapshots__/$name.stdout.txt" 2>"__snapshots__/$name.stderr.txt" || status="$?"
    echo "$status" > "__snapshots__/$name.status.txt"
    git add --intent-to-add "$suite"
    if git --no-pager diff --exit-code --shortstat HEAD -- "__snapshots__/$name.*"; then
      passes+=1
    else
      failures+=1
    fi
  done
  echo
done
cd "$owd"
declare -i total=$((passes + failures))
declare changes
if git diff --quiet HEAD -- "$PWD"/**/__tests__/__snapshots__; then
  echo "$(tput setaf 2 || :)All $passes tests passed.$(tput sgr0 || :)"
  exit 0
else
  echo "$(tput setaf 9 || :)$(tput smul || :)$failures of $total tests failed$(tput rmul || :) (snapshots did not match committed data)$(tput sgr0 || :)"
  git diff --exit-code --compact-summary HEAD -- "$PWD"/**/__tests__/__snapshots__
  exit 1
fi
